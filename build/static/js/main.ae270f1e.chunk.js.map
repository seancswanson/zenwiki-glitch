{"version":3,"sources":["components/wikimedia-logo.png","components/wikipedia-globe.png","components/react-512.png","components/enso-sm-sepia.png","components/InfoModal.jsx","partials/Header.jsx","components/SearchPage.jsx","components/ResultItem.jsx","components/ResultsList.jsx","components/ArticlePage.jsx","partials/Footer.jsx","components/useDarkMode.js","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","wikimedia","require","globe","react","InfoModal","props","closeWindow","className","role","tabIndex","onClick","onKeyDown","href","target","rel","alt","src","Header","searchResultsPresent","clearState","useState","displayDropDownShown","setDisplayDropDownShown","infoModalShown","setInfoModalShown","type","aria-label","toggleTheme","logo","SearchPage","searchBarValue","setSearchBarValue","getResults","name","onSubmit","event","preventDefault","getSearchResults","store","addNotification","title","message","insert","container","animationIn","animationOut","dismiss","duration","onChange","value","ResultItem","result","handleClick","extract","description","e","ResultsList","searchResults","searchQuery","handleResultsClick","length","map","resultItemData","i","key","index","itemData","console","log","resultItemClickHandler","ArticlePage","articleData","Footer","useDarkMode","theme","setTheme","setMode","mode","window","localStorage","setItem","useEffect","localTheme","getItem","App","setSearchQuery","setSearchResults","selectedArticle","setSelectedArticle","themeToggler","themeMode","url","params","action","prop","generator","formatversion","exintro","inprop","iiprop","gpssearch","list","srsearch","srnamespace","srwhat","srinfo","srprop","sroffset","srlimit","format","Object","keys","forEach","fetch","then","response","json","dir","query","pages","catch","error","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ae270f1e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/wikimedia-logo.3f9a7b96.png\";","module.exports = __webpack_public_path__ + \"static/media/wikipedia-globe.d6419372.png\";","module.exports = __webpack_public_path__ + \"static/media/react-512.30dca143.png\";","module.exports = __webpack_public_path__ + \"static/media/enso-sm-sepia.fe20d686.png\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './InfoModal.scss';\n\nconst wikimedia = require('./wikimedia-logo.png');\nconst globe = require('./wikipedia-globe.png');\nconst react = require('./react-512.png');\n\nexport const InfoModal = (props) => {\n  const { closeWindow } = props;\n  return (\n    <div className=\"powered-by-container animate__animated animate__fadeIn\" role=\"button\" tabIndex={0} onClick={closeWindow} onKeyDown={closeWindow}>\n      <div className=\"powered-by-wrapper soft \">\n        <h2>\n          About zen\n          <i>wiki</i>\n        </h2>\n        <p>\n          zen\n          <i>wiki</i>\n          {' '}\n          provides a simple interface for searching Wikipedia articles.\n        </p>\n        <p>\n          Every visible element is essential.\n        </p>\n        <p>\n          I started from the idea of a research interface with an oddly satisfying \"eye-feel\"- meaning elements that please the eye and inspire exploration. The artistic direction is organic, essential, and minimalist in structure with neumorphism tendencies. This is the first project where I've implemented a \"dark\" theme, please give it a try!\n        </p>\n        <h2>Powered by</h2>\n        <div className=\"logo-row\">\n          <a href=\"https://www.wikipedia.org/\" target=\"_blank\" rel=\"noopener noreferrer\" alt=\"External Wikipedia Link\" className=\"soft powered-by-item\">\n            <img\n              className=\"wiki-globe-logo\"\n              src={globe}\n              alt=\"Wikipedia Globe Logo\"\n            />\n          </a>\n          <a href=\"https://wikimediafoundation.org/\" target=\"_blank\" rel=\"noopener noreferrer\" alt=\"External Wikimedia Foundation Link\" className=\"soft powered-by-item\">\n            <img\n              className=\"wikimedia-logo\"\n              src={wikimedia}\n              alt=\"Wikimedia Foundation Logo\"\n            />\n          </a>\n          <a href=\"https://reactjs.org/\" target=\"_blank\" rel=\"noopener noreferrer\" alt=\"External React.js Link\" className=\"soft powered-by-item\">\n            <img\n              className=\"react-logo\"\n              src={react}\n              alt=\"React Logo\"\n            />\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nInfoModal.propTypes = {\n  closeWindow: PropTypes.func,\n};\nexport default InfoModal;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { InfoModal } from '../components/InfoModal';\n\nimport './Header.scss';\n\nexport const Header = (props) => {\n  const { searchResultsPresent, clearState } = props;\n  const [displayDropDownShown, setDisplayDropDownShown] = useState(false);\n  const [infoModalShown, setInfoModalShown] = useState(false);\n\n  return (\n    <header>\n      <div className=\"header-controls-wrapper animate__animated animate__fadeIn animate__faster\">\n        { searchResultsPresent ? <button type=\"button\" aria-label=\"Back Button\" className=\"dot-focus soft back-button-wrapper animate__animated animate__fadeIn animate__faster\" onClick={clearState}><div className=\"back-button\" /></button> : false }\n\n        { searchResultsPresent ? <button type=\"button\" aria-label=\"Zenwiki logo\" className=\"dot-focus soft logo-wrapper animate__animated animate__fadeIn animate__faster\" onClick={clearState}><div className=\"logo\" /></button> : false }\n\n        <button type=\"button\" aria-label=\"App Info\" className=\"dot-focus soft\" onClick={() => setInfoModalShown(!infoModalShown)}><div className=\"info-modal-button\" /></button>\n        { infoModalShown ? (\n          <InfoModal closeWindow={() => setInfoModalShown(false)} />\n        ) : ''}\n\n        <button type=\"button\" aria-label=\"Display Settings\" className=\"dot-focus soft\" onClick={() => setDisplayDropDownShown(!displayDropDownShown)}><div className=\"display-controls-button\" /></button>\n        { displayDropDownShown ? (\n          <div className=\"display-controls-drop-menu animate__animated animate__fadeIn animate__fast\">\n            <button type=\"button\" aria-label=\"Dark Mode Toggler\" className=\"soft\" onClick={() => props.toggleTheme()}>\n              <div className=\"display-controls-theme\" />\n            </button>\n          </div>\n        ) : ''}\n\n      </div>\n    </header>\n  );\n};\n\nHeader.propTypes = {\n  clearState: PropTypes.func,\n  searchResultsPresent: PropTypes.bool,\n};\n\n\nexport default Header;\n","import React, { useState } from 'react';\nimport ReactNotification, { store } from 'react-notifications-component';\nimport 'react-notifications-component/dist/theme.css';\n\nimport './SearchPage.scss';\n\n// const logo = require('./128px-Japanese_Crest_mitu_Tomoe_Old_design-edit-earth-wave.png');\nconst logo = require('./enso-sm-sepia.png');\n\nexport const SearchPage = (props) => {\n  const [searchBarValue, setSearchBarValue] = useState('');\n  const { getResults } = props;\n\n  const getSearchResults = (searchBarValue) => {\n    getResults(searchBarValue);\n  };\n\n  return (\n    <div className=\"SearchPage soft\">\n      <img className=\"home-logo\" src={logo} alt=\"Japanese Crest Logo\" />\n      <h1>\n        zen\n        <span className=\"italic thin\">wiki</span>\n      </h1>\n      <form\n        className=\"search-form\"\n        name=\"wikipedia-search-form\"\n        onSubmit={(event) => {\n          event.preventDefault();\n          getSearchResults(searchBarValue);\n          if (!searchBarValue) {\n            store.addNotification({\n              title: '',\n              message: 'Please enter a search query.',\n              type: 'default',\n              insert: 'top',\n              container: 'top-right',\n              animationIn: ['animate__animated', 'animate__fadeIn'],\n              animationOut: ['animate__animated', 'animate__fadeOutRight'],\n              dismiss: {\n                duration: 2000,\n              },\n            });\n          }\n        }}\n      >\n        <input\n          className=\"search-input soft dot-focus\"\n          type=\"text\"\n          onChange={(event) => {\n            setSearchBarValue(event.target.value);\n          }}\n        />\n        <input className=\"soft dot-focus\" type=\"submit\" value=\"🔎\" />\n      </form>\n      <ReactNotification />\n    </div>\n  );\n};\n\nexport default SearchPage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './ResultItem.scss';\n\nexport const ResultItem = (props) => {\n  const { result, handleClick } = props;\n  const {\n    title, extract, description,\n  } = result;\n\n  return (\n    <div className=\"soft result-item-wrapper button\" role=\"button\" tabIndex={0} onKeyDown={(e) => handleClick(e)} onClick={(e) => handleClick(e)}>\n      <h2 className=\"result-title\">{title}</h2>\n      {description ? <p className=\"result-description\">{description}</p> : <p className=\"result-extract\">{extract}</p>}\n    </div>\n  );\n};\n\nResultItem.propTypes = {\n  result: PropTypes.object,\n  handleClick: PropTypes.func,\n};\n\nexport default ResultItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ResultItem } from './ResultItem';\n\nimport './ResultList.scss';\n\nexport const ResultsList = (props) => {\n  const { searchResults, searchQuery, handleResultsClick } = props;\n\n  const resultItemClickHandler = (e, index) => {\n    const itemData = searchResults[index];\n    console.log('you clicked on a results item from the repeater', searchResults[index], itemData);\n    handleResultsClick(itemData);\n  };\n\n  return (\n    <div className=\"results-list-container\">\n      <div className=\"animate__animated animate__fadeIn\">\n        <h1 className=\"search-query-display animate__animated animate__fadeIn animate__slow\">\n          Showing\n          {' '}\n          {searchResults.length}\n          {' '}\n          results for:\n          “\n          {searchQuery}\n          ”\n        </h1>\n        <div className=\"results-items-container animate__animated animate__fadeIn animate__slower\">\n          {searchResults.map((resultItemData, i) => (\n            <ResultItem\n              result={resultItemData}\n              key={i}\n              handleClick={(e) => resultItemClickHandler(e, i)}\n            />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nResultsList.propTypes = {\n  searchResults: PropTypes.array,\n  searchQuery: PropTypes.string,\n  handleResultsClick: PropTypes.func,\n};\n\n\nexport default ResultsList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './ArticlePage.scss';\n\nexport const ArticlePage = ({\n  articleData,\n}) => {\n  console.log(articleData);\n  return (\n    <div className=\"ArticlePage soft animate__animated animate__fadeIn animate__faster\">\n      <h1>{}</h1>\n      <p>extract</p>\n    </div>\n\n  );\n};\n\n\nArticlePage.propTypes = {\n  articleData: PropTypes.shape({\n    canonicalurl: PropTypes.string,\n    contentmodel: PropTypes.string,\n    description: PropTypes.string,\n    descriptionsource: PropTypes.string,\n    displaytitle: PropTypes.string,\n    editurl: PropTypes.string,\n    extract: PropTypes.string,\n    fullurl: PropTypes.string,\n    index: PropTypes.number,\n    lastrevid: PropTypes.number,\n    length: PropTypes.number,\n    ns: PropTypes.number,\n    pageid: PropTypes.number,\n    pageimage: PropTypes.string,\n    pagelanguage: PropTypes.string,\n    pagelanguagedir: PropTypes.string,\n    pagelanguagehtmlcode: PropTypes.string,\n    terms: PropTypes.shape({\n      alias: PropTypes.array,\n      description: PropTypes.array,\n      label: PropTypes.array,\n    }),\n    alias: PropTypes.string,\n    label: PropTypes.string,\n    thumbnail: PropTypes.shape({\n      height: PropTypes.number,\n      source: PropTypes.string,\n      width: PropTypes.number,\n    }),\n    title: PropTypes.string,\n    touched: PropTypes.string,\n  }),\n};\nexport default ArticlePage;\n","import React from 'react';\nimport './Footer.scss';\n\nexport const Footer = () => (\n  <footer>\n    Made with ♡ by\n    {' '}\n    <a className=\"website-link\" href=\"http://seancswanson.com\">Sean Swanson</a>\n    {' '}\n    2020 #BLM\n  </footer>\n);\n\nexport default Footer;\n","import { useEffect, useState } from 'react';\n\nexport const useDarkMode = () => {\n  const [theme, setTheme] = useState('light');\n\n  const setMode = (mode) => {\n    window.localStorage.setItem('theme', mode);\n    setTheme(mode);\n  };\n\n  const themeToggler = () => {\n    theme === 'light' ? setMode('dark') : setMode('light');\n  };\n\n  useEffect(() => {\n    const localTheme = window.localStorage.getItem('theme');\n    localTheme && setTheme(localTheme);\n  }, []);\n  return [theme, themeToggler];\n};\n\nexport default useDarkMode;\n","import React, { useState } from 'react';\nimport { Header } from './partials/Header';\nimport { SearchPage } from './components/SearchPage';\n// import { InfoModal } from './components/InfoModal';\nimport { ResultsList } from './components/ResultsList';\nimport { ArticlePage } from './components/ArticlePage';\nimport { Footer } from './partials/Footer';\nimport { useDarkMode } from './components/useDarkMode';\n\n\nimport './App.scss';\n\n\nfunction App() {\n  // ----------\n  const [searchQuery, setSearchQuery] = useState();\n  const [searchResults, setSearchResults] = useState();\n  const [selectedArticle, setSelectedArticle] = useState();\n  const [theme, themeToggler] = useDarkMode();\n\n\n  // ----------\n  // Sent to the Header component, where the options menu exists.\n  // The button within options menu triggers the toggle function in useDarkMode.\n  const handleThemeChange = () => {\n    themeToggler();\n  };\n\n  // ----------\n  // Sent to the SearchResults component, where each result item exists.\n  // Clicking on a result item saves the associated data into our state.\n  const handleResultsClick = (itemData) => {\n    setSelectedArticle(itemData);\n  };\n\n  // ----------\n  const clearState = () => {\n    // If there is a selected article, return to the search results page.\n    if (selectedArticle) {\n      setSelectedArticle();\n    } else {\n      // If the user is viewing search results, send them back to the search page.\n      setSearchQuery();\n      setSearchResults();\n    }\n  };\n\n  // Stringifies the theme value returned from the useDarkMode hook.\n  const themeMode = theme === 'light' ? '' : 'dark-mode';\n\n  // ----------\n  // First, Construct the API endpoint by building a URL with a set of parameters.\n  // Then, Use built-in fetch function to send an XMLHttpRequest.\n  // Then, Ssave the response into our searchResult state.\n  const getResults = (searchBarValue) => {\n    setSearchQuery(searchBarValue);\n\n    // Using the documentation and API sandbox, I configured the request for the info\n    // that I needed for the project. https://en.wikipedia.org/wiki/Special:ApiSandbox#action=query&list=search&srsearch=Craig%20Noone&format=json\n    let url = 'https://en.wikipedia.org/w/api.php';\n\n    const params = {\n      action: 'query',\n      prop: 'extracts|info|description|pageimages|imageinfo|pageterms',\n      generator: 'prefixsearch',\n      formatversion: '2',\n      exintro: '1',\n      // explaintext: '1',\n      // exsectionformat: 'wiki',\n      inprop: 'url|displaytitle',\n      iiprop: 'url|metadata|canonicaltitle|commonmetadata',\n      gpssearch: searchBarValue,\n      list: 'search',\n      srsearch: searchBarValue,\n      srnamespace: 0,\n      srwhat: 'text',\n      srinfo: 'suggestion',\n      srprop: '',\n      sroffset: 0,\n      srlimit: 1,\n      format: 'json',\n    };\n\n    // We need to set the origin to allow for CORS\n    url += '?origin=*';\n    // Iterate through each of the keys in `params` and concatenate the value of the key,\n    // along with the ampersand and equal signs to construct the full URL.\n    Object.keys(params).forEach((key) => { url += `&${key}=${params[key]}`; });\n\n    fetch(url)\n      .then((response) => response.json())\n      .then((response) => {\n        console.dir(response.query.pages);\n        setSearchResults(response.query.pages);\n      })\n      .catch((error) => { console.log(error); });\n  };\n\n  // ----------\n  return (\n    <div className={`App ${themeMode}`}>\n      <Header\n        clearState={() => clearState()}\n        searchResultsPresent={!!searchResults}\n        toggleTheme={handleThemeChange}\n        theme={theme}\n      />\n\n      <div className=\"content-wrapper animate__animated animate__fadeIn\">\n\n        {searchResults && !selectedArticle\n          ? <ResultsList searchQuery={searchQuery} searchResults={searchResults} handleResultsClick={(itemData) => handleResultsClick(itemData)} />\n          : <SearchPage getResults={getResults} />}\n\n        { selectedArticle\n          ? <ArticlePage articleData={selectedArticle} />\n          : false}\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}